# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: githubcom_Kaiya_kafka-chan_kafkapb_kafka-chan.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='githubcom_Kaiya_kafka-chan_kafkapb_kafka-chan.proto',
  package='kafkapb',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n3githubcom_Kaiya_kafka-chan_kafkapb_kafka-chan.proto\x12\x07kafkapb\"\x82\x01\n\x18QueryMsgByKeywordRequest\x12\x12\n\nkafkaTopic\x18\x01 \x01(\t\x12\x11\n\tpartition\x18\x02 \x01(\x05\x12\x0f\n\x07keyword\x18\x03 \x01(\t\x12.\n\x0ckeyword_from\x18\x04 \x01(\x0e\x32\x18.kafkapb.KeywordFromType\"*\n\x16QueryMsgByKeywordReply\x12\x10\n\x08msg_json\x18\x01 \x01(\t\"`\n\x18ProduceMsgToTopicRequest\x12\x12\n\nkafkaTopic\x18\x01 \x01(\t\x12\x11\n\tpartition\x18\x02 \x01(\x05\x12\x0b\n\x03key\x18\x03 \x01(\t\x12\x10\n\x08msg_json\x18\x04 \x01(\t\"$\n\x16ProduceMsgToTopicReply\x12\n\n\x02ok\x18\x01 \x01(\x08\"B\n\x19MakeMemoryLRUCacheRequest\x12\x12\n\nkafkaTopic\x18\x01 \x01(\t\x12\x11\n\tpartition\x18\x02 \x01(\x05\"%\n\x17MakeMemoryLRUCacheReply\x12\n\n\x02ok\x18\x01 \x01(\x08\")\n\x15QueryMsgByOffsetReply\x12\x10\n\x08msg_json\x18\x01 \x01(\t\"P\n\x17QueryMsgByOffsetRequest\x12\x12\n\nkafkaTopic\x18\x01 \x01(\t\x12\x11\n\tpartition\x18\x02 \x01(\x03\x12\x0e\n\x06offset\x18\x03 \x01(\x03*9\n\x0fKeywordFromType\x12\x11\n\rKAFKA_MSG_KEY\x10\x00\x12\x13\n\x0fKAFKA_MSG_VALUE\x10\x01\x32\xf7\x02\n\tKafkaChan\x12Y\n\x11QueryMsgByKeyword\x12!.kafkapb.QueryMsgByKeywordRequest\x1a\x1f.kafkapb.QueryMsgByKeywordReply\"\x00\x12Y\n\x11ProduceMsgToTopic\x12!.kafkapb.ProduceMsgToTopicRequest\x1a\x1f.kafkapb.ProduceMsgToTopicReply\"\x00\x12\\\n\x12MakeMemoryLRUCache\x12\".kafkapb.MakeMemoryLRUCacheRequest\x1a .kafkapb.MakeMemoryLRUCacheReply\"\x00\x12V\n\x10QueryMsgByOffset\x12 .kafkapb.QueryMsgByOffsetRequest\x1a\x1e.kafkapb.QueryMsgByOffsetReply\"\x00\x62\x06proto3'
)

_KEYWORDFROMTYPE = _descriptor.EnumDescriptor(
  name='KeywordFromType',
  full_name='kafkapb.KeywordFromType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='KAFKA_MSG_KEY', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='KAFKA_MSG_VALUE', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=609,
  serialized_end=666,
)
_sym_db.RegisterEnumDescriptor(_KEYWORDFROMTYPE)

KeywordFromType = enum_type_wrapper.EnumTypeWrapper(_KEYWORDFROMTYPE)
KAFKA_MSG_KEY = 0
KAFKA_MSG_VALUE = 1



_QUERYMSGBYKEYWORDREQUEST = _descriptor.Descriptor(
  name='QueryMsgByKeywordRequest',
  full_name='kafkapb.QueryMsgByKeywordRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='kafkaTopic', full_name='kafkapb.QueryMsgByKeywordRequest.kafkaTopic', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='partition', full_name='kafkapb.QueryMsgByKeywordRequest.partition', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='keyword', full_name='kafkapb.QueryMsgByKeywordRequest.keyword', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='keyword_from', full_name='kafkapb.QueryMsgByKeywordRequest.keyword_from', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=65,
  serialized_end=195,
)


_QUERYMSGBYKEYWORDREPLY = _descriptor.Descriptor(
  name='QueryMsgByKeywordReply',
  full_name='kafkapb.QueryMsgByKeywordReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='msg_json', full_name='kafkapb.QueryMsgByKeywordReply.msg_json', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=197,
  serialized_end=239,
)


_PRODUCEMSGTOTOPICREQUEST = _descriptor.Descriptor(
  name='ProduceMsgToTopicRequest',
  full_name='kafkapb.ProduceMsgToTopicRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='kafkaTopic', full_name='kafkapb.ProduceMsgToTopicRequest.kafkaTopic', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='partition', full_name='kafkapb.ProduceMsgToTopicRequest.partition', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='key', full_name='kafkapb.ProduceMsgToTopicRequest.key', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='msg_json', full_name='kafkapb.ProduceMsgToTopicRequest.msg_json', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=241,
  serialized_end=337,
)


_PRODUCEMSGTOTOPICREPLY = _descriptor.Descriptor(
  name='ProduceMsgToTopicReply',
  full_name='kafkapb.ProduceMsgToTopicReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ok', full_name='kafkapb.ProduceMsgToTopicReply.ok', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=339,
  serialized_end=375,
)


_MAKEMEMORYLRUCACHEREQUEST = _descriptor.Descriptor(
  name='MakeMemoryLRUCacheRequest',
  full_name='kafkapb.MakeMemoryLRUCacheRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='kafkaTopic', full_name='kafkapb.MakeMemoryLRUCacheRequest.kafkaTopic', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='partition', full_name='kafkapb.MakeMemoryLRUCacheRequest.partition', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=377,
  serialized_end=443,
)


_MAKEMEMORYLRUCACHEREPLY = _descriptor.Descriptor(
  name='MakeMemoryLRUCacheReply',
  full_name='kafkapb.MakeMemoryLRUCacheReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ok', full_name='kafkapb.MakeMemoryLRUCacheReply.ok', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=445,
  serialized_end=482,
)


_QUERYMSGBYOFFSETREPLY = _descriptor.Descriptor(
  name='QueryMsgByOffsetReply',
  full_name='kafkapb.QueryMsgByOffsetReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='msg_json', full_name='kafkapb.QueryMsgByOffsetReply.msg_json', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=484,
  serialized_end=525,
)


_QUERYMSGBYOFFSETREQUEST = _descriptor.Descriptor(
  name='QueryMsgByOffsetRequest',
  full_name='kafkapb.QueryMsgByOffsetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='kafkaTopic', full_name='kafkapb.QueryMsgByOffsetRequest.kafkaTopic', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='partition', full_name='kafkapb.QueryMsgByOffsetRequest.partition', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='offset', full_name='kafkapb.QueryMsgByOffsetRequest.offset', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=527,
  serialized_end=607,
)

_QUERYMSGBYKEYWORDREQUEST.fields_by_name['keyword_from'].enum_type = _KEYWORDFROMTYPE
DESCRIPTOR.message_types_by_name['QueryMsgByKeywordRequest'] = _QUERYMSGBYKEYWORDREQUEST
DESCRIPTOR.message_types_by_name['QueryMsgByKeywordReply'] = _QUERYMSGBYKEYWORDREPLY
DESCRIPTOR.message_types_by_name['ProduceMsgToTopicRequest'] = _PRODUCEMSGTOTOPICREQUEST
DESCRIPTOR.message_types_by_name['ProduceMsgToTopicReply'] = _PRODUCEMSGTOTOPICREPLY
DESCRIPTOR.message_types_by_name['MakeMemoryLRUCacheRequest'] = _MAKEMEMORYLRUCACHEREQUEST
DESCRIPTOR.message_types_by_name['MakeMemoryLRUCacheReply'] = _MAKEMEMORYLRUCACHEREPLY
DESCRIPTOR.message_types_by_name['QueryMsgByOffsetReply'] = _QUERYMSGBYOFFSETREPLY
DESCRIPTOR.message_types_by_name['QueryMsgByOffsetRequest'] = _QUERYMSGBYOFFSETREQUEST
DESCRIPTOR.enum_types_by_name['KeywordFromType'] = _KEYWORDFROMTYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

QueryMsgByKeywordRequest = _reflection.GeneratedProtocolMessageType('QueryMsgByKeywordRequest', (_message.Message,), {
  'DESCRIPTOR' : _QUERYMSGBYKEYWORDREQUEST,
  '__module__' : 'githubcom_Kaiya_kafka_chan_kafkapb_kafka_chan_pb2'
  # @@protoc_insertion_point(class_scope:kafkapb.QueryMsgByKeywordRequest)
  })
_sym_db.RegisterMessage(QueryMsgByKeywordRequest)

QueryMsgByKeywordReply = _reflection.GeneratedProtocolMessageType('QueryMsgByKeywordReply', (_message.Message,), {
  'DESCRIPTOR' : _QUERYMSGBYKEYWORDREPLY,
  '__module__' : 'githubcom_Kaiya_kafka_chan_kafkapb_kafka_chan_pb2'
  # @@protoc_insertion_point(class_scope:kafkapb.QueryMsgByKeywordReply)
  })
_sym_db.RegisterMessage(QueryMsgByKeywordReply)

ProduceMsgToTopicRequest = _reflection.GeneratedProtocolMessageType('ProduceMsgToTopicRequest', (_message.Message,), {
  'DESCRIPTOR' : _PRODUCEMSGTOTOPICREQUEST,
  '__module__' : 'githubcom_Kaiya_kafka_chan_kafkapb_kafka_chan_pb2'
  # @@protoc_insertion_point(class_scope:kafkapb.ProduceMsgToTopicRequest)
  })
_sym_db.RegisterMessage(ProduceMsgToTopicRequest)

ProduceMsgToTopicReply = _reflection.GeneratedProtocolMessageType('ProduceMsgToTopicReply', (_message.Message,), {
  'DESCRIPTOR' : _PRODUCEMSGTOTOPICREPLY,
  '__module__' : 'githubcom_Kaiya_kafka_chan_kafkapb_kafka_chan_pb2'
  # @@protoc_insertion_point(class_scope:kafkapb.ProduceMsgToTopicReply)
  })
_sym_db.RegisterMessage(ProduceMsgToTopicReply)

MakeMemoryLRUCacheRequest = _reflection.GeneratedProtocolMessageType('MakeMemoryLRUCacheRequest', (_message.Message,), {
  'DESCRIPTOR' : _MAKEMEMORYLRUCACHEREQUEST,
  '__module__' : 'githubcom_Kaiya_kafka_chan_kafkapb_kafka_chan_pb2'
  # @@protoc_insertion_point(class_scope:kafkapb.MakeMemoryLRUCacheRequest)
  })
_sym_db.RegisterMessage(MakeMemoryLRUCacheRequest)

MakeMemoryLRUCacheReply = _reflection.GeneratedProtocolMessageType('MakeMemoryLRUCacheReply', (_message.Message,), {
  'DESCRIPTOR' : _MAKEMEMORYLRUCACHEREPLY,
  '__module__' : 'githubcom_Kaiya_kafka_chan_kafkapb_kafka_chan_pb2'
  # @@protoc_insertion_point(class_scope:kafkapb.MakeMemoryLRUCacheReply)
  })
_sym_db.RegisterMessage(MakeMemoryLRUCacheReply)

QueryMsgByOffsetReply = _reflection.GeneratedProtocolMessageType('QueryMsgByOffsetReply', (_message.Message,), {
  'DESCRIPTOR' : _QUERYMSGBYOFFSETREPLY,
  '__module__' : 'githubcom_Kaiya_kafka_chan_kafkapb_kafka_chan_pb2'
  # @@protoc_insertion_point(class_scope:kafkapb.QueryMsgByOffsetReply)
  })
_sym_db.RegisterMessage(QueryMsgByOffsetReply)

QueryMsgByOffsetRequest = _reflection.GeneratedProtocolMessageType('QueryMsgByOffsetRequest', (_message.Message,), {
  'DESCRIPTOR' : _QUERYMSGBYOFFSETREQUEST,
  '__module__' : 'githubcom_Kaiya_kafka_chan_kafkapb_kafka_chan_pb2'
  # @@protoc_insertion_point(class_scope:kafkapb.QueryMsgByOffsetRequest)
  })
_sym_db.RegisterMessage(QueryMsgByOffsetRequest)



_KAFKACHAN = _descriptor.ServiceDescriptor(
  name='KafkaChan',
  full_name='kafkapb.KafkaChan',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=669,
  serialized_end=1044,
  methods=[
  _descriptor.MethodDescriptor(
    name='QueryMsgByKeyword',
    full_name='kafkapb.KafkaChan.QueryMsgByKeyword',
    index=0,
    containing_service=None,
    input_type=_QUERYMSGBYKEYWORDREQUEST,
    output_type=_QUERYMSGBYKEYWORDREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='ProduceMsgToTopic',
    full_name='kafkapb.KafkaChan.ProduceMsgToTopic',
    index=1,
    containing_service=None,
    input_type=_PRODUCEMSGTOTOPICREQUEST,
    output_type=_PRODUCEMSGTOTOPICREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='MakeMemoryLRUCache',
    full_name='kafkapb.KafkaChan.MakeMemoryLRUCache',
    index=2,
    containing_service=None,
    input_type=_MAKEMEMORYLRUCACHEREQUEST,
    output_type=_MAKEMEMORYLRUCACHEREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='QueryMsgByOffset',
    full_name='kafkapb.KafkaChan.QueryMsgByOffset',
    index=3,
    containing_service=None,
    input_type=_QUERYMSGBYOFFSETREQUEST,
    output_type=_QUERYMSGBYOFFSETREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_KAFKACHAN)

DESCRIPTOR.services_by_name['KafkaChan'] = _KAFKACHAN

# @@protoc_insertion_point(module_scope)
